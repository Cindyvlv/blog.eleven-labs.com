{"date":"2022-08-24T00:00:00.000Z","title":"Symfony, Javascript et traduction : BazingaJSTranslationBundle, comment l'utiliser avec le format ICU ?","excerpt":"M√™me si de plus en plus d'architectes s√©parent le back et le front pour qu'ils puissent √©voluer ind√©pendamment, certaines applications (souvent du legacy) impl√©mentent le front dans l'application Symfony avec Twig et du Javascript. Nous allons refaire le point sur le fonctionnement des traductions et sur le formattage ICU.","readingTime":"6mn","authors":["marianne"],"categories":["php","javascript"],"content":"M√™me si de plus en plus d'architectes s√©parent le back et le front pour qu'ils puissent √©voluer ind√©pendamment, certaines applications (souvent du legacy) impl√©mentent le front dans l'application Symfony avec Twig et du Javascript. Nous allons refaire le point sur le fonctionnement des traductions et sur le formattage ICU.\n\n## Comment sont g√©r√©s les traductions dans Symfony ?\nDans les nombreux composants propos√©s par Symfony, il y a celui qui permet de g√©rer les traductions : [translation](https://symfony.com/doc/current/translation.html).\n\nIl permet de g√©n√©rer les traductions soit par une phrase, soit par une cl√© dans le PHP (avec le service Translator) ou dans les twigs. Les fichiers de traductions peuvent √™tre en YAML, XML et PHP, et l'emplacement ainsi que la langue par d√©faut sont d√©finis dans la [configuration](https://symfony.com/doc/current/translation.html#configuration). Ils sont g√©n√©ralement nomm√©s messages.{locale}.yaml.\n```php\n// PHP\nuse Symfony\\Contracts\\Translation\\TranslatorInterface;\n\npublic function index(TranslatorInterface $translator)\n{\n    $translatedByPhrase = $translator->trans('Symfony is great'); // phrase\n    $translatedByKey = $translator->trans('home.welcome'); // phrase\n}\n```\n\n```text\n{# Twig #}\n{% trans %}Symfony is great{% endtrans %}\n{{ welcome.home|trans }}\n```\n\n```yaml\n# translations/messages.fr.yaml\nSymfony is great: J'aime Symfony\nhome:\n    welcome: Bonjour\n```\n\n\nC'est pratique pour pouvoir g√©rer le texte statique, mais on peut avoir parfois besoin d'afficher des param√®tres dans la phrase, ou encore de g√©rer les pluriels.\n\nPour cela, on peut rajouter des param√®tres dans les fonctions, et Symfony poss√®de la variable _%count%_ pour g√©rer les pluriels (uniquement pour des fichiers au format YAML ou PHP).\n```php\n// PHP\n$translatedWithName = $translator->trans('home.welcome', ['%name%' => $name]);\n$translatedWithCount = $translator->trans('home.notification.message', ['%count%' => $count]);\n```\n\n```text\n{# Twig #}\n{{ welcome.home|trans({'%name%': name}) }}\n{{ home.notification.message|trans({'%count%': count}) }}\n```\n\n```yaml\n# translation\nhome:\n    welcome: Bonjour %name%\n    notification:\n            message: {0}Vous n'avez aucun message|{1}Vous avez un message|]1,Inf[Vous avez %count% messages\n```\n> üëâüèª Symfony g√®re les pluriels diff√©remment en fonction de la langue : pour le fran√ßais, le 0 √©quivaut au 1, mais pour les autres langues (hormis quelques langues sp√©cifiques comme le russe), le 0 √©quivaut au pluriel. En effet, on va dire 0 message en fran√ßais, mais 0 messages en anglais.\n\nIl existe plein d'autres subtilit√©s et de configurations ainsi que des bundles propres pour g√©rer les solutions Saas dans la documentation officielle.\n\nD'ailleurs, ces solutions Saas utilisent un autre format que celui propos√© de base par Symfony : le format ICU.\n\n## Qu'est-ce que le format ICU ?\nLe format ICU (International Components for Unicode) est un format de message largement utilis√© dans de nombreux syst√®mes logiciels de traduction tels que localize.biz (et vous pouvez en apprendre plus sur son utilisation sur l‚Äôarticle [Gestion des traductions avec localise.biz](https://blog.eleven-labs.com/fr/gestion-des-traductions-avec-localise.biz/)), [phrase](https://phrase.com/), [lokalise](https://lokalise.com) ou encore [crowdin](https://crowdin.com/). Ce format permet de g√©rer des patterns tels que le pluriel.\n\nLe format ne fait pas varier l'utilisation et l'ordonnancement des cl√©s des fichiers de traduction, mais les fichiers doivent √™tre renomm√©s messages.{locale}+intl-icu.yaml et les patterns modifi√©s.\n\nReprenons l‚Äôexemple plus haut d‚Äôune traduction incluant le pluriel :\n```yaml\nhome:\n    notification:\n            message: {0}Vous n'avez aucun message|{1}Vous avez un message|]1,Inf[Vous avez %count% messages\n```\nDevient en format ICU sous Symfony\n```yaml\nhome:\n    notification:\n        message: >-\n            count, plural,\n                =0     {Vous n'avez aucun message}\n                one   {Vous avez un message}\n                other {Vous avez # messages}\n            }\n```\n\n\nD‚Äôautres patterns existent : la s√©lection (par exemple l‚Äôindication du genre pour afficher le bon pronom), le formatage des dates, des pourcentages ou encore des affichages sp√©cifiques des prix en fonction de la monnaie. Vous pouvez retrouver toutes les possibilit√©s dans la [documentation de Symfony](https://symfony.com/doc/current/translation/message_format.html).\n\n\n## Pour les traductions dans le Javascript, il y a BazingaJSTranslationBundle\n[BazingaJSTranslationBundle](https://github.com/willdurand/BazingaJsTranslationBundle) sert √† utiliser les traductions g√©r√©es par Symfony. Il va g√©n√©rer un fichier js avec l‚Äôensemble des traductions qui vont pouvoir √™tre ensuite utilis√©es dans les autres classes js.\n\nPour revenir √† notre exemple de traduction sur le nombre de messages dont on doit √™tre notifi√©, voici ce que cela donnerait :\n```javascript\nTranslator.trans('home.notification.message', {'%count%': countNotifications}, 'messages');\n```\n> ‚ö†Ô∏è Il n‚Äôest plus conseill√© d‚Äôutiliser _Translator.transChoice()_: la fonction _transChoice()_ du composant Translation de Symfony a √©t√© d√©pr√©ci√©e et supprim√©e en version 5.\n\nCe bundle permet d'utiliser le format ICU en incluant la librairie externe _intl-messageformat.min.js_, mais malheureusement, tout ne se passe pas comme pr√©vu.\n\n\n## BazingaJSTranslationBundle et format ICU, que se passe-t-il ?\n\nLors d'une de mes missions, je me suis retrouv√©e devant deux probl√©matiques.\n\nPour la premi√®re, il se trouve que certaines traductions comprenaient des tags HTML. Si cela ne posait aucun souci hors ICU, cela le devenait d‚Äôun coup. En comparant la version de BazingaJSTranslationBundle avec la derni√®re sortie et en lisant la derni√®re [Release Note](https://github.com/willdurand/BazingaJsTranslationBundle/releases/tag/5.0.0), je me suis rendu compte qu‚Äôil s‚Äôagissait d‚Äôun bug connu de ma version 4.*, et qu‚Äôelle √©tait r√©gl√©e en version 5.0. Une simple mont√©e de version a donc r√©solu ce probl√®me.\n\nConcernant la deuxi√®me, elle est survenue uniquement en mode production : impossible de r√©cup√©rer le fichier js des traductions ! J‚Äôavais une belle erreur 500 üò±\n\nJe n'avais eu aucun souci en local, mais parce que les assets ne sont pas g√©n√©r√©s de la m√™me fa√ßon entre la dev et la prod avec BazingaJSTranslationBundle. Pourquoi ? Parce qu‚Äôen prod, √ßa consid√®re que le fichier messages.en+intl-icu.yaml est le m√™me domaine que le fichier messages.en.yaml, et du coup, √ßa fonctionne !\n\nPlusieurs PRs ont √©t√© propos√©es mais aucune n‚Äôa √©t√© accept√©e pour l‚Äôinstant (on dirait que la maintenance du bundle est un peu mort), il a fallu que je trouve en [r√©ponse d‚Äôune des PRs](https://github.com/willdurand/BazingaJsTranslationBundle/pull/322#issuecomment-975614873) un petit tour de passe-passe (sinon, il allait falloir faire un fork) : rajouter un fichier vide nomm√© _messages.en.yaml_ en plus du votre fichier en format ICU.\n\n## Conclusion\n\nDe plus en plus d‚Äôentreprises utilisent des solutions Saas pour g√©rer les traductions, et si vous devez faire une migration, vous allez devoir passer par cette passation de format de traduction. La phase est chronophage et fastidieuse, et l‚Äôexistant peut r√©server des surprises avec ce nouveau format. En esp√©rant que cet article vous aura aid√© soit √† mettre en place des traductions, soit √† faire cette migration !\n"}