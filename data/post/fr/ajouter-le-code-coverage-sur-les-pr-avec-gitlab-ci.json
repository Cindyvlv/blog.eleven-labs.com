{"date":"2016-12-02T00:00:00.000Z","title":"Ajouter le code coverage sur les MR avec Gitlab-CI","excerpt":"Voici un tip qui permet de pouvoir voir en un clin d’œil les répercussions d'une MR sur la couverture de code de votre projet.","readingTime":"1mn","authors":["pouzor"],"categories":[],"content":"\n\nVoici un tip qui permet de pouvoir voir en un clin d’œil les répercussions d'une MR sur la couverture de code de votre projet.\n\n\n![gitlab-ci-code-coverage](/imgs/posts/2016-12-02-gitlab-ci/gitlab-ci-code-coverage-1.png)\n\n\nDans un premier temps, nous allons modifier notre .gitlab-ci.yml\n\n```yaml\nbefore_script:\n  - composer install\n\nstages:\n  - test\n\ntest:\n  script:\n  - vendor/phpunit/phpunit/phpunit -c app --coverage-text --colors=never\n```\n\nLa modification de notre pipeline porte sur les configs de phpunit en ajoutant ```--coverage-text --colors=never```  afin d'avoir dans les logs du pipeline les résultats du code-coverage.\n\nPuis dans l'interface de réglages du pipeline, nous allons configurer la regex afin de récupérer la couverture de code du commit.\n\n\n![gitlab-ci-code-coverage](/imgs/posts/2016-12-02-gitlab-ci/gitlab-ci-code-coverage-2.png)\n\nLà, gitlab est plutot sympa et nous donne déjà plusieurs regex toutes prêtes en fonction du langage du projet. Dans mon cas c'est du PHP donc la config sera ```^\\s*Lines:\\s*\\d+.\\d+\\%```\n\n*C'est tout !!!*\n\nPetit bonus, pour avoir le badge avec le code coverage sur le README, ajouter simplement ces lignes :\n\n```md\n[![build status](https://gitlab.com/[TEAM]/[PROJECT]/badges/master/build.svg)](https://gitlab.com/[TEAM]/[PROJECT]/commits/master){:rel=\"nofollow noreferrer\"}\n```\n\nEt voila le résultat\n\n![gitlab-ci-code-coverage](/imgs/posts/2016-12-02-gitlab-ci/gitlab-ci-code-coverage-3.png)\n\nPour plus d'infos : [gitlab-ci: documentation](https://docs.gitlab.com/ee/user/project/pipelines/settings.html#test-coverage-parsing){:rel=\"nofollow noreferrer\"}\n"}