{"date":"2020-09-16T00:00:00.000Z","title":"HTTPS - Part 1 : Basics","excerpt":"HTTPS, why & how you should set it up.","readingTime":"4mn","authors":["jbernard"],"categories":[],"content":"\nHTTPS is at the center of virtually all of our regular use of the global Internet. Facebook, Google, Amazon, Twitter, this blog and surely your favorite cooking-recipe website use HTTPS. In an ecosystem where even the most basic security measures are sometimes neglected, let's take a look at how to implement HTTPS on your own website and why you should do so.\n\n## Introduction\n\nThis two-part article has a twofold objective: to raise awareness about the use of HTTPS (whether as a simple Internet user or as an administrator) and to show that its implementation is (no longer) intricated.\n\nThis first part will deal with the theory behind the HTTPS. What is HTTPS? Why use it and therefore why implement it?\n\n## HTTPS: what is it?\n\n## A \"secure\" version of HTTP\n\nHTTP (HyperText Transfer Protocol) is the communication protocol used on the web to navigate, especially on websites accessible through your favorite browser. Thus, when you load a web page, the browser sends the request to the target server, which responds with the requested web page. All this is done in HTTP, and in the best case scenario, in HTTPS.\n\n### How does it work?\n\nWithout the secure - encrypted - layer of HTTPS, all communication is done \"in clear\", that is to say potentially readable or even modifiable by anyone between you (the client) and the server. HTTPS, by encrypting the communication through SSL/TLS, protects the data traveling through HTTP by making it understandable only to the recipient. To make sure that the recipient server is the one it claims to be, HTTPS authenticates the target with certificates, usually called \"SSL Certificates\".\n\n![HTTP-VS-HTTPS]({{site.baseurl}}/assets/2018-05-09-https-part-01/http-vs-https.png)\n\n\f\n## Le HTTPS : pourquoi est-ce si important ?\n\n### To avoid the \"Man in the middle\".\n\nAs I said before, in simple HTTP all communications are transparent, therefore fully accessible to anyone between you and the server. Taking advantage of such a situation is called a \"Man-in-the-middle\" attack. Take a look at the diagram below:\n\n![man-in-the-middle]({{site.baseurl}}/assets/2018-05-09-https-part-01/man-in-the-middle.png)\n\nHere, Helen communicates with the website \"http://www.example.com\" in simple HTTP. Thus, the password she sent is fully visible to the attacker. Carol, visibly wiser or at least luckier, communicates with the site \"https://www.example.com\" in HTTPS. In this way, the attacker sees only the encrypted and therefore useless version of the password.\n\n### To ensure the identity of the recipient\n\nHTTPS also offers another protection, which is to make sure that the recipient is who they say they are and not an impostor. Thanks to certificates issued by recognized certification authorities (e.g. OVH, goDaddy, Amazon or Let's Encrypt), your browser is able to validate the identity of the site visited. This greatly helps to avoid man-in-the-middle attacks.\n\n## HTTPS: as an Internet user, how can I protect myself?\n\nAs an Internet user, only your vigilance will save you. If the sites you visit display the small green padlock at the URL level, then the site in question is validated by your browser. Of course, you must first trust your browser on its HTTPS management. But nowadays, all main browsers do this job perfectly and are regularly updated in this regard.\n\nIt is therefore up to the managers of the websites you visit to set up HTTPS. Today (as of August 2020 at least), about 80% of the websites visited are already encrypted according to Mozilla Firefox statistics (visible in particular on the page [Let's Encrypt telemetry](https://letsencrypt.org/stats/) :\n\n![graphique-progression-HTTPS]({{site.baseurl}}/assets/2018-05-09-https-part-01/graph_HTTPS_use.png)\n\n\n## HTTPS: as an administrator, is it complicated to set up?\n\nToday, setting up HTTPS on your own server is easy and completely free. So there is no excuse not to do it, as soon as you set up your site.\n\n### About Let's Encrypt\n\nLet's Encrypt, in addition to providing certificates for free, provides a tool to retrieve and renew those certificates: Certbot. Simply clone the GitHub repository or go through their Docker image to retrieve via the terminal all the certificates you might need. Since March 2018, Let's Encrypt has been providing certificates called \"wildcards\", which will validate all your current and future subdomains via a single certificate. And this is always free of charge.\n\n### SEO\n\nYou should also be aware that simple HTTP sites are less well referenced by Google ([since 2014](https://webmasters.googleblog.com/2014/08/https-as-ranking-signal.html)) and that browsers clearly tend to signal to the user the lack of security of sites that are not certified and protected.\n\n\n## Conclusion\n\nThis first part on the theory around HTTPS is over: we have seen what exactly this protocol was, why it was important and how to use it, both as a web user browsing internet and as an administrator looking to secure his web platforms.\n\nIn the second part of this article, we will see how to technically implement HTTPS on a server, using mainly Let's Encrypt, Certbot, Nginx and Docker.\n"}