{"version":3,"file":"SearchPage-67450554.js","sources":["../../src/pages/PostListPage/SubHeader/SubHeader.tsx","../../src/pages/PostListPage/PostListPage.tsx","../../src/pages/SearchPage/SearchPage.tsx"],"sourcesContent":["import './SubHeader.scss';\n\nimport { AsProps, Box, Button, ButtonProps, Flex, Heading } from '@eleven-labs/design-system';\nimport React from 'react';\n\nexport interface SubHeaderProps {\n  introBlock: {\n    title: React.ReactNode;\n    description: React.ReactNode;\n  };\n  choiceCategoryLabel: React.ReactNode;\n  choiceCategories: ({\n    label: React.ReactNode;\n    isActive?: boolean;\n  } & AsProps<'a'>)[];\n}\n\nexport const SubHeader: React.FC<SubHeaderProps> = ({ introBlock, choiceCategoryLabel, choiceCategories }) => (\n  <Box bg=\"azure\" color=\"white\" className=\"sub-header\">\n    <Flex\n      flexDirection=\"column\"\n      pt={{ xs: 's' }}\n      pb={{ xs: 'l' }}\n      justifyContent={{ md: 'center' }}\n      alignItems={{ md: 'center' }}\n    >\n      <Box>\n        <Box px=\"m\">\n          <Heading as=\"p\" size=\"m\">\n            {introBlock.title}\n          </Heading>\n          <Heading as=\"p\" mt=\"xxs-3\" size=\"xl\" className=\"sub-header__description\">\n            {introBlock.description}\n          </Heading>\n          <Heading as=\"p\" mt={{ xs: 's', md: 'l' }} size=\"m\">\n            {choiceCategoryLabel}\n          </Heading>\n        </Box>\n        <Flex\n          gap={{ xs: 'xs', md: 'xl' }}\n          alignItems=\"center\"\n          mt={{ xs: 's', md: 'm' }}\n          px=\"m\"\n          width=\"full\"\n          className=\"sub-header__choice-chip-group\"\n        >\n          {choiceCategories.map(({ label, isActive, ...choiceCategoryProps }, index) => (\n            <Button\n              key={index}\n              isChoiceChip={true}\n              variant={isActive ? 'primary' : 'secondary'}\n              {...(choiceCategoryProps as ButtonProps)}\n            >\n              {label}\n            </Button>\n          ))}\n        </Flex>\n      </Box>\n    </Flex>\n  </Box>\n);\n","import { Text } from '@eleven-labs/design-system';\nimport React from 'react';\n\nimport { Container, NewsletterBlock, NewsletterBlockProps } from '@/components';\n\nimport { SubHeader, SubHeaderProps } from './SubHeader';\n\nexport type PostListPageProps = {\n  subHeader: SubHeaderProps;\n  title: React.ReactNode;\n  postPreviewList: React.ReactNode;\n  newsletterBlock: NewsletterBlockProps;\n};\n\nexport const PostListPage: React.FC<PostListPageProps> = ({ subHeader, title, postPreviewList, newsletterBlock }) => (\n  <>\n    <SubHeader {...subHeader} />\n    <Container variant=\"global\" mt={{ xs: 'l', md: 'xl' }}>\n      <Container variant=\"content\">\n        <Text size=\"m\" my=\"m\" fontWeight=\"medium\">\n          {title}\n        </Text>\n        {postPreviewList}\n      </Container>\n      <Container>\n        <NewsletterBlock my={{ xs: 'xl', md: 'xxl' }} {...newsletterBlock} />\n      </Container>\n    </Container>\n  </>\n);\n","import { Heading, Skeleton, Text } from '@eleven-labs/design-system';\nimport React from 'react';\n\nimport {\n  Container,\n  Divider,\n  NewsletterBlock,\n  NewsletterBlockProps,\n  NotFoundBlock,\n  NotFoundBlockProps,\n} from '@/components';\n\nexport type SearchPageProps = {\n  backLink: React.ReactNode;\n  title: React.ReactNode;\n  description: React.ReactNode;\n  postPreviewList: React.ReactNode;\n  newsletterBlock: NewsletterBlockProps;\n  searchNotFound?: NotFoundBlockProps;\n  isLoading?: boolean;\n};\n\nexport const SearchPage: React.FC<SearchPageProps> = ({\n  backLink,\n  title,\n  description,\n  postPreviewList,\n  newsletterBlock,\n  searchNotFound,\n  isLoading = false,\n}) => (\n  <Container variant=\"global\">\n    {!isLoading && searchNotFound ? (\n      <NotFoundBlock {...searchNotFound} />\n    ) : (\n      <>\n        <Container variant=\"content\" className=\"search-page\">\n          {backLink}\n          <Skeleton isLoading={isLoading}>\n            <Heading as=\"p\" mt=\"s\" size=\"l\">\n              {title}\n            </Heading>\n          </Skeleton>\n          <Skeleton isLoading={isLoading}>\n            <Text size=\"s\">{description}</Text>\n          </Skeleton>\n          <Divider mt=\"xs\" mb=\"l\" size=\"l\" mx=\"0\" bg=\"yellow\" />\n          {postPreviewList}\n        </Container>\n        <Container>\n          <NewsletterBlock my={{ xs: 'xl', md: 'xxl' }} {...newsletterBlock} />\n        </Container>\n      </>\n    )}\n  </Container>\n);\n"],"names":["SubHeader","introBlock","choiceCategoryLabel","choiceCategories","React","Box","Flex","Heading","label","isActive","choiceCategoryProps","index","Button","PostListPage","subHeader","title","postPreviewList","newsletterBlock","Container","Text","NewsletterBlock","SearchPage","backLink","description","searchNotFound","isLoading","NotFoundBlock","Skeleton","Divider"],"mappings":"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"}