{"version":3,"file":"PostPage-9ad13a82.js","sources":["../../src/pages/PostPage/PostFooter/PostFooter.tsx","../../src/pages/PostPage/PostHeader/PostHeader.tsx","../../src/pages/PostPage/RelatedPostList/RelatedPostList.tsx","../../src/pages/PostPage/PostPage.tsx"],"sourcesContent":["import './PostFooter.scss';\n\nimport { AsProps, Box, Flex, Link, Text } from '@eleven-labs/design-system';\nimport React from 'react';\n\nexport interface PostFooterProps {\n  title: React.ReactNode;\n  authors: {\n    name: string;\n    content: string;\n    link: AsProps<'a'>;\n    avatarImageUrl?: string;\n  }[];\n  emptyAvatarImageUrl: string;\n}\n\nexport const PostFooter: React.FC<PostFooterProps> = ({ title, authors, emptyAvatarImageUrl }) => (\n  <Box className=\"post-footer\" color=\"dark-grey\" mt=\"m\">\n    <Text mb=\"xxs\" size=\"xs\" fontWeight=\"bold\" textTransform=\"uppercase\">\n      {title}\n    </Text>\n    <Flex flexDirection={{ xs: 'column', md: 'row' }} gapY={{ md: 'xxl' }} gap=\"s\">\n      {authors.map((author, authorIndex) => (\n        <Flex key={authorIndex} mb=\"s\" className=\"post-footer__author\">\n          <img\n            src={author.avatarImageUrl ?? emptyAvatarImageUrl}\n            alt={author.name}\n            className={author.avatarImageUrl ? 'post-footer__avatar-img' : 'post-footer__empty-avatar-img'}\n          />\n          <Box ml=\"xxs\">\n            <Link weight=\"medium\" {...author.link}>\n              {author.name}\n            </Link>\n            <Text as=\"div\" size=\"xs\" dangerouslySetInnerHTML={{ __html: author.content }} />\n          </Box>\n        </Flex>\n      ))}\n    </Flex>\n  </Box>\n);\n","import { AsProps, Box, Flex, Heading, Icon, Link } from '@eleven-labs/design-system';\nimport React from 'react';\n\nexport interface PostHeaderProps {\n  title: React.ReactNode;\n  date: string;\n  readingTime: string;\n  authors: {\n    username: string;\n    name: string;\n    link: AsProps<'a'>;\n  }[];\n}\n\nexport const PostHeader: React.FC<PostHeaderProps> = ({ title, date, readingTime, authors }) => (\n  <Box mt={{ xs: 's', md: 'xl' }} textSize=\"xs\">\n    <Heading as=\"h1\" size=\"xl\">\n      {title}\n    </Heading>\n    <Flex flexDirection={{ xs: 'column', md: 'row' }} mt={{ md: 'xxs-3' }}>\n      <Flex mt={{ xs: 'xxs', md: '0' }} color=\"dark-grey\" alignItems=\"center\">\n        <Flex alignItems=\"center\">\n          <Icon name=\"calendar\" size=\"24px\" />\n          <Box as=\"span\" ml={{ xs: 'xxs-3' }}>\n            {date}\n          </Box>\n        </Flex>\n        <Flex alignItems=\"center\" ml={{ xs: 's' }}>\n          <Icon name=\"access-time\" size=\"24px\" />\n          <Box as=\"span\" ml={{ xs: 'xxs-3' }}>\n            {readingTime}\n          </Box>\n        </Flex>\n      </Flex>\n      <Flex alignItems=\"center\" mt={{ xs: 'xxs-2', md: '0' }} ml={{ md: 'xxs-3' }} color=\"dark-grey\">\n        <Icon name=\"person\" size=\"24px\" />\n        {authors.map((author, index) => (\n          <React.Fragment key={author.username}>\n            <Link {...author.link} ml=\"xxs-3\">\n              {author.name}\n            </Link>\n            {authors.length - 1 !== index && (\n              <Box as=\"span\" ml=\"xxs-3\">\n                &\n              </Box>\n            )}\n          </React.Fragment>\n        ))}\n      </Flex>\n    </Flex>\n  </Box>\n);\n","import './RelatedPostList.scss';\n\nimport { Box, BoxProps, Heading } from '@eleven-labs/design-system';\nimport React from 'react';\n\nimport { PostPreview, PostPreviewProps } from '@/components';\n\nexport interface RelatedPostListProps extends BoxProps {\n  relatedPostListTitle: string;\n  posts: ({ slug: string } & PostPreviewProps)[];\n}\n\nexport const RelatedPostList: React.FC<RelatedPostListProps> = ({ relatedPostListTitle, posts, ...boxProps }) => (\n  <Box {...boxProps} p=\"m\" className=\"related-post-list\">\n    <Heading as=\"p\" mb=\"m\" size=\"m\">\n      {relatedPostListTitle}\n    </Heading>\n    {posts.map((post, index) => (\n      <PostPreview key={post.slug} isRelated={true} {...post} mt=\"s\" />\n    ))}\n  </Box>\n);\n","import { Box } from '@eleven-labs/design-system';\nimport React from 'react';\n\nimport { Container, Divider, NewsletterBlock, NewsletterBlockProps } from '@/components';\n\nimport { PostFooter, PostFooterProps } from './PostFooter';\nimport { PostHeader, PostHeaderProps } from './PostHeader';\nimport { RelatedPostList, RelatedPostListProps } from './RelatedPostList';\n\nexport interface PostPageProps {\n  backLink: React.ReactNode;\n  header: PostHeaderProps;\n  content: string;\n  footer: PostFooterProps;\n  newsletterBlock: NewsletterBlockProps;\n  relatedPostList: RelatedPostListProps;\n}\n\nexport const PostPage: React.FC<PostPageProps> = ({\n  backLink,\n  header,\n  content,\n  footer,\n  relatedPostList,\n  newsletterBlock,\n}) => (\n  <Container variant=\"global\">\n    <Container variant=\"content\">\n      {backLink}\n      <PostHeader {...header} />\n      <Divider mt=\"xs\" bg=\"light-grey\" />\n      <Box as=\"section\" textSize=\"s\" dangerouslySetInnerHTML={{ __html: content }} />\n      <Divider mt=\"xs\" bg=\"light-grey\" />\n      <PostFooter {...footer} />\n    </Container>\n    <Container>\n      <NewsletterBlock mb={{ xs: 'l' }} {...newsletterBlock} />\n      {relatedPostList.posts.length > 0 && <RelatedPostList mb={{ xs: 'xl', md: 'xxl' }} {...relatedPostList} />}\n    </Container>\n  </Container>\n);\n"],"names":["PostFooter","title","authors","emptyAvatarImageUrl","React","Box","Text","Flex","author","authorIndex","Link","PostHeader","date","readingTime","Heading","Icon","index","RelatedPostList","relatedPostListTitle","posts","boxProps","post","PostPreview","PostPage","backLink","header","content","footer","relatedPostList","newsletterBlock","Container","Divider","NewsletterBlock"],"mappings":"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"}