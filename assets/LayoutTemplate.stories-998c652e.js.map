{"version":3,"file":"LayoutTemplate.stories-998c652e.js","sources":["../../src/templates/LayoutTemplate/Footer/Footer.tsx","../../src/templates/LayoutTemplate/Header/Header.tsx","../../src/templates/HtmlTemplate/HtmlTemplate.tsx","../../src/templates/LayoutTemplate/LayoutTemplate.tsx"],"sourcesContent":["import './Footer.scss';\n\nimport { AsProps, Box, Button, Flex, Heading, Icon, IconNameType, Link, Logo, Text } from '@eleven-labs/design-system';\nimport React from 'react';\n\nexport interface FooterProps {\n  introBlock: {\n    title: React.ReactNode;\n    description: React.ReactNode;\n  };\n  elevenLabsSiteLink: { label: React.ReactNode } & AsProps<'a'>;\n  contact: {\n    title: React.ReactNode;\n    list: { title?: React.ReactNode; description: React.ReactNode }[];\n  };\n  socialLinks: ({\n    iconName: Extract<IconNameType, 'rss' | 'facebook' | 'twitter' | 'linkedin' | 'welcometothejungle'>;\n  } & AsProps<'a'>)[];\n  languageLinks: ({\n    label: React.ReactNode;\n    isActive?: boolean;\n  } & AsProps<'a'>)[];\n}\n\nexport const Footer: React.FC<FooterProps> = ({\n  introBlock,\n  elevenLabsSiteLink: { label: elevenLabsSiteLinkLabel, ...elevenLabsSiteLinkProps },\n  contact,\n  socialLinks,\n  languageLinks,\n}) => (\n  <Box as=\"footer\" bg=\"navy\" color=\"white\" textAlign={{ xs: 'center', md: 'left' }} textSize=\"s\" className=\"footer\">\n    <Flex\n      flexDirection={{ xs: 'column', md: 'row' }}\n      justifyContent=\"around\"\n      alignItems=\"center\"\n      pt={{ md: 'xl' }}\n      pb={{ md: 'xl' }}\n      mb=\"xl\"\n    >\n      <Box mb=\"xl\">\n        <Flex justifyContent={{ xs: 'center', md: 'start' }} alignItems=\"center\" pt={{ xs: 'l', md: '0' }} mb=\"xxs\">\n          <Logo name=\"website\" size=\"2.5em\" />\n        </Flex>\n        <Text>{introBlock.title}</Text>\n        <Text fontWeight=\"bold\" mb=\"s\">\n          {introBlock.description}\n        </Text>\n        <Button {...(elevenLabsSiteLinkProps as typeof Button)}>{elevenLabsSiteLinkLabel}</Button>\n      </Box>\n      <Box>\n        <Heading as=\"p\" size=\"l\" mb=\"s\">\n          {contact.title}\n        </Heading>\n        <Flex flexDirection={{ xs: 'column', md: 'row' }} gap={{ md: 'xl' }}>\n          {contact.list.map((currentContact, contactIndex) => (\n            <Box key={contactIndex} mb=\"m\">\n              {currentContact.title && (\n                <Text fontWeight=\"bold\" mb=\"xxs-2\">\n                  {currentContact.title}\n                </Text>\n              )}\n              {currentContact.description}\n            </Box>\n          ))}\n        </Flex>\n        <Flex gapY=\"s\" alignItems=\"center\">\n          {socialLinks.map(({ as: As = 'a', iconName, ...linkProps }, socialLinkIndex) => (\n            <As\n              key={socialLinkIndex}\n              {...linkProps}\n              target=\"_blank\"\n              {...(iconName === 'rss'\n                ? {\n                    'data-rss-link': true,\n                  }\n                : {\n                    'data-social-link': iconName,\n                  })}\n            >\n              <Icon name={iconName} size=\"2.5em\" color=\"white\" mx=\"xxs-2\" className=\"footer__social-icon\" />\n            </As>\n          ))}\n        </Flex>\n      </Box>\n    </Flex>\n    <Flex py=\"s\" justifyContent=\"center\" alignItems=\"center\" className=\"footer__language-links-container\">\n      <Box mr=\"xxs\">\n        <Icon name=\"language\" />\n      </Box>\n      {languageLinks.map(({ label, isActive, ...linkProps }, index) => (\n        <React.Fragment key={index}>\n          {isActive ? (\n            <Text fontWeight=\"bold\">{label}</Text>\n          ) : (\n            <Link {...linkProps} data-internal-link=\"home\">\n              {label}\n            </Link>\n          )}\n          {languageLinks.length - 1 !== index && <Box mx=\"s\" />}\n        </React.Fragment>\n      ))}\n    </Flex>\n  </Box>\n);\n","import './Header.scss';\n\nimport { AsProps, Box, Flex, Icon, Logo, useMediaQuery } from '@eleven-labs/design-system';\nimport React from 'react';\n\nimport { AutocompleteField, AutocompleteFieldProps } from '@/components';\n\nexport interface HeaderProps {\n  homeLink: AsProps<'a'>;\n  autocomplete: AutocompleteFieldProps;\n  autocompleteIsDisplayed?: boolean;\n  onToggleSearch?: () => void;\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  homeLink,\n  autocomplete,\n  autocompleteIsDisplayed = false,\n  onToggleSearch,\n}) => {\n  const isNotTablet = useMediaQuery('aboveTablet');\n  return (\n    <Box as=\"header\" bg=\"azure\" className=\"header\">\n      <Flex justifyContent=\"between\" alignItems=\"center\" py=\"s\" px={{ xs: 'm', md: 'l' }}>\n        {!isNotTablet && autocompleteIsDisplayed ? (\n          <Box\n            as=\"button\"\n            className=\"header__icon-button\"\n            color=\"white\"\n            onClick={onToggleSearch}\n            data-internal-link=\"home\"\n          >\n            <Icon name=\"arrow-back\" color=\"white\" size=\"28px\" />\n          </Box>\n        ) : (\n          <Box {...(homeLink as typeof Box)} color=\"white\">\n            <Logo name=\"blog\" className=\"header__logo\" />\n          </Box>\n        )}\n        {isNotTablet || autocompleteIsDisplayed ? (\n          <AutocompleteField {...autocomplete} />\n        ) : (\n          <Box as=\"button\" className=\"header__icon-button\" onClick={onToggleSearch} aria-label=\"Open search\">\n            <Icon name=\"search\" color=\"white\" size=\"28px\" />\n          </Box>\n        )}\n      </Flex>\n    </Box>\n  );\n};\n","import * as React from 'react';\n\nimport { GTM_ID } from '@/constants';\nimport { getPathFile } from '@/helpers/assetHelper';\n\nexport interface HtmlTemplateProps {\n  lang: string;\n  title: string;\n  content: string;\n  metas?: Array<React.MetaHTMLAttributes<HTMLMetaElement>>;\n  links?: Array<React.LinkHTMLAttributes<HTMLLinkElement>>;\n  styles?: Array<React.StyleHTMLAttributes<HTMLStyleElement> & { text: string }>;\n  scripts?: Array<React.ScriptHTMLAttributes<HTMLScriptElement> & { critical?: boolean; text?: string }>;\n}\n\nconst ldJsonType = 'application/ld+json';\n\nconst renderScripts = (scripts: HtmlTemplateProps['scripts']): JSX.Element[] | undefined =>\n  scripts?.map<JSX.Element>(({ text, ...script }, index) => (\n    <script\n      key={index}\n      {...script}\n      dangerouslySetInnerHTML={\n        text\n          ? {\n              __html: text,\n            }\n          : undefined\n      }\n    />\n  ));\n\nexport const HtmlTemplate: React.FC<HtmlTemplateProps> = ({ lang, title, content, metas, links, styles, scripts }) => (\n  <html lang={lang}>\n    <head>\n      <meta charSet=\"UTF-8\" />\n      <meta name=\"robots\" content=\"index, follow, noarchive\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <meta name=\"mobile-web-app-capable\" content=\"yes\" />\n      <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n      {metas?.map((meta, index) => (\n        <meta key={index} {...meta} />\n      ))}\n      <link rel=\"shortcut icon\" type=\"image/x-icon\" href={getPathFile('/favicon.ico')} />\n      <link rel=\"manifest\" href={getPathFile('/web-app-manifest.json')} />\n      {links?.map((link, index) => (\n        <link key={index} {...link} />\n      ))}\n      {styles?.map(({ text, ...props }, index) => (\n        <style\n          key={index}\n          {...props}\n          dangerouslySetInnerHTML={\n            text\n              ? {\n                  __html: text,\n                }\n              : undefined\n          }\n        />\n      ))}\n      {renderScripts(scripts?.filter((script) => script.critical && ![ldJsonType].includes(script.type as string)))}\n      <title>{title}</title>\n      {renderScripts(scripts?.filter((script) => ldJsonType === (script.type as string)))}\n      <script\n        dangerouslySetInnerHTML={{\n          __html: `window.dataLayer = window.dataLayer || [];`,\n        }}\n      />\n      <script\n        dangerouslySetInnerHTML={{\n          __html: `(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\nnew Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\nj=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n})(window,document,'script','dataLayer','${GTM_ID}');`,\n        }}\n      />\n    </head>\n    <body>\n      <noscript\n        dangerouslySetInnerHTML={{\n          __html: `<iframe src=\"https://www.googletagmanager.com/ns.html?id=${GTM_ID}\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>`,\n        }}\n      />\n      <div\n        id=\"root\"\n        dangerouslySetInnerHTML={{\n          __html: content,\n        }}\n      />\n      {renderScripts(scripts?.filter((script) => !script.critical && ![ldJsonType].includes(script.type as string)))}\n    </body>\n  </html>\n);\n","import { Box, Flex } from '@eleven-labs/design-system';\nimport React from 'react';\n\nimport { Footer, FooterProps } from '@/templates';\n\nexport type LayoutTemplateProps = {\n  header: React.ReactNode;\n  footer: FooterProps;\n  children: React.ReactNode;\n};\n\nexport const LayoutTemplate: React.FC<LayoutTemplateProps> = ({ header, footer, children }) => (\n  <Flex flexDirection=\"column\" minHeight=\"screen\">\n    {header}\n    <Box as=\"main\" flex=\"1\">\n      {children}\n    </Box>\n    <Footer {...footer} />\n  </Flex>\n);\n"],"names":["Footer","introBlock","elevenLabsSiteLinkLabel","elevenLabsSiteLinkProps","contact","socialLinks","languageLinks","jsxs","Box","Flex","jsx","Logo","Text","Button","Heading","currentContact","contactIndex","As","iconName","linkProps","socialLinkIndex","Icon","label","isActive","index","React","Link","Header","homeLink","autocomplete","autocompleteIsDisplayed","onToggleSearch","isNotTablet","useMediaQuery","AutocompleteField","ldJsonType","renderScripts","scripts","text","script","HtmlTemplate","lang","title","content","metas","links","styles","meta","getPathFile","link","props","GTM_ID","LayoutTemplate","header","footer","children"],"mappings":"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"}