{"version":3,"file":"LayoutTemplate.stories-f1c239d2.js","sources":["../../src/templates/LayoutTemplate/Footer/Footer.tsx","../../src/templates/LayoutTemplate/Header/Header.tsx","../../src/templates/HtmlTemplate/HtmlTemplate.tsx","../../src/templates/LayoutTemplate/LayoutTemplate.tsx"],"sourcesContent":["import './Footer.scss';\n\nimport {\n  As,\n  AsProps,\n  Box,\n  Button,\n  Flex,\n  Heading,\n  Icon,\n  IconNameType,\n  Link,\n  Logo,\n  Text,\n} from '@eleven-labs/design-system';\nimport React from 'react';\n\nexport interface FooterProps {\n  introBlock: {\n    title: React.ReactNode;\n    description: React.ReactNode;\n  };\n  elevenLabsSiteLink: { label: React.ReactNode } & AsProps<'a'>;\n  contact: {\n    title: React.ReactNode;\n    list: { title: React.ReactNode; description: React.ReactNode }[];\n  };\n  socialLinks: ({\n    as?: As;\n    iconName: Extract<IconNameType, 'rss' | 'facebook' | 'twitter' | 'linkedin' | 'welcometothejungle'>;\n  } & Pick<React.ComponentProps<'a'>, 'href'>)[];\n  languageLinks: ({\n    label: React.ReactNode;\n    isActive?: boolean;\n  } & AsProps<'a'>)[];\n}\n\nexport const Footer: React.FC<FooterProps> = ({\n  introBlock,\n  elevenLabsSiteLink: { label: elevenLabsSiteLinkLabel, ...elevenLabsSiteLinkProps },\n  contact,\n  socialLinks,\n  languageLinks,\n}) => (\n  <Box as=\"footer\" bg=\"navy\" color=\"white\" textAlign={{ xs: 'center', md: 'left' }} textSize=\"s\" className=\"footer\">\n    <Flex\n      flexDirection={{ xs: 'column', md: 'row' }}\n      justifyContent=\"around\"\n      alignItems=\"center\"\n      pt={{ md: 'xl' }}\n      pb={{ md: 'xl' }}\n      mb=\"xl\"\n    >\n      <Box mb=\"xl\">\n        <Flex justifyContent={{ xs: 'center', md: 'start' }} alignItems=\"center\" pt={{ xs: 'l', md: '0' }} mb=\"xxs\">\n          <Logo name=\"website\" size=\"2.5em\" />\n        </Flex>\n        <Text>{introBlock.title}</Text>\n        <Text fontWeight=\"bold\" mb=\"s\">\n          {introBlock.description}\n        </Text>\n        <Button {...(elevenLabsSiteLinkProps as typeof Button)}>{elevenLabsSiteLinkLabel}</Button>\n      </Box>\n      <Box>\n        <Heading size=\"l\" mb=\"s\">\n          {contact.title}\n        </Heading>\n        <Flex flexDirection={{ xs: 'column', md: 'row' }} gap={{ md: 'xl' }}>\n          {contact.list.map((currentContact, contactIndex) => (\n            <Box key={contactIndex} mb={contact.list.length === contactIndex + 1 ? 'xs' : 'm'}>\n              <Text fontWeight=\"bold\" mb=\"xxs-2\">\n                {currentContact.title}\n              </Text>\n              {currentContact.description}\n            </Box>\n          ))}\n        </Flex>\n        <Flex gapY=\"s\">\n          {socialLinks.map(({ as: As = 'a', iconName, ...linkProps }, socialLinkIndex) => (\n            <As key={socialLinkIndex} target=\"_blank\" {...linkProps}>\n              <Icon name={iconName} size=\"2.5em\" color=\"white\" mx=\"xxs-2\" className=\"footer__social-icon\" />\n            </As>\n          ))}\n        </Flex>\n      </Box>\n    </Flex>\n    <Flex py=\"s\" justifyContent=\"center\" alignItems=\"center\" className=\"footer__language-links-container\">\n      <Box mr=\"xxs\">\n        <Icon name=\"language\" />\n      </Box>\n      {languageLinks.map(({ label, isActive, ...linkProps }, index) => (\n        <React.Fragment key={index}>\n          {isActive ? <Text fontWeight=\"bold\">{label}</Text> : <Link {...linkProps}>{label}</Link>}\n          {languageLinks.length - 1 !== index && <Box mx=\"s\" />}\n        </React.Fragment>\n      ))}\n    </Flex>\n  </Box>\n);\n","import './Header.scss';\n\nimport { AsProps, Box, Flex, Icon, Logo, useMediaQuery } from '@eleven-labs/design-system';\nimport React from 'react';\n\nimport { AutocompleteField, AutocompleteFieldProps } from '@/components';\n\nexport interface HeaderProps {\n  homeLink: AsProps<'a'>;\n  autocomplete: AutocompleteFieldProps;\n  autocompleteIsDisplayed?: boolean;\n  onToggleSearch?: () => void;\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  homeLink,\n  autocomplete,\n  autocompleteIsDisplayed = false,\n  onToggleSearch,\n}) => {\n  const isNotTablet = useMediaQuery('aboveTablet');\n  return (\n    <Box as=\"header\" bg=\"azure\" className=\"header\">\n      <Flex justifyContent=\"between\" alignItems=\"center\" py=\"s\" px={{ xs: 'm', md: 'l' }}>\n        {!isNotTablet && autocompleteIsDisplayed ? (\n          <Box as=\"button\" className=\"header__icon-button\" color=\"white\" onClick={onToggleSearch}>\n            <Icon name=\"arrow-back\" color=\"white\" size=\"28px\" />\n          </Box>\n        ) : (\n          <Box {...(homeLink as typeof Box)} color=\"white\">\n            <Logo name=\"blog\" className=\"header__logo\" />\n          </Box>\n        )}\n        {isNotTablet || autocompleteIsDisplayed ? (\n          <AutocompleteField {...autocomplete} />\n        ) : (\n          <Box as=\"button\" className=\"header__icon-button\" onClick={onToggleSearch} aria-label=\"Open search\">\n            <Icon name=\"search\" color=\"white\" size=\"28px\" />\n          </Box>\n        )}\n      </Flex>\n    </Box>\n  );\n};\n","import * as React from 'react';\n\nimport { getPathFile } from '@/helpers/assetHelper';\n\nexport interface HtmlTemplateProps {\n  lang: string;\n  title: string;\n  content: string;\n  metas?: Array<React.MetaHTMLAttributes<HTMLMetaElement>>;\n  links?: Array<React.LinkHTMLAttributes<HTMLLinkElement>>;\n  styles?: Array<React.StyleHTMLAttributes<HTMLStyleElement> & { text: string }>;\n  scripts?: Array<React.ScriptHTMLAttributes<HTMLScriptElement> & { critical?: boolean; text?: string }>;\n}\n\nconst renderScripts = (scripts: HtmlTemplateProps['scripts']): JSX.Element[] | undefined =>\n  scripts?.map<JSX.Element>((script, index) => (\n    <script\n      key={index}\n      {...script}\n      dangerouslySetInnerHTML={\n        script.text\n          ? {\n              __html: script.text,\n            }\n          : undefined\n      }\n    />\n  ));\n\nexport const HtmlTemplate: React.FC<HtmlTemplateProps> = ({ lang, title, content, metas, links, styles, scripts }) => (\n  <html lang={lang}>\n    <head>\n      <meta charSet=\"UTF-8\" />\n      <meta name=\"robots\" content=\"index, follow, noarchive\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <meta name=\"mobile-web-app-capable\" content=\"yes\" />\n      <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n      {metas?.map((meta, index) => (\n        <meta key={index} {...meta} />\n      ))}\n      <link rel=\"shortcut icon\" type=\"image/x-icon\" href={getPathFile('/favicon.ico')} />\n      <link rel=\"manifest\" href={getPathFile('/web-app-manifest.json')} />\n      {links?.map((link, index) => (\n        <link key={index} {...link} />\n      ))}\n      {styles?.map(({ text, ...props }, index) => (\n        <style\n          key={index}\n          {...props}\n          dangerouslySetInnerHTML={\n            text\n              ? {\n                  __html: text,\n                }\n              : undefined\n          }\n        />\n      ))}\n      {renderScripts(scripts?.filter((script) => script.critical))}\n      <title>{title}</title>\n    </head>\n    <body>\n      <div\n        id=\"root\"\n        dangerouslySetInnerHTML={{\n          __html: content,\n        }}\n      />\n      {renderScripts(scripts?.filter((script) => !script.critical))}\n    </body>\n  </html>\n);\n","import { Box, Flex } from '@eleven-labs/design-system';\nimport React from 'react';\n\nimport { Footer, FooterProps } from '@/templates';\n\nexport type LayoutTemplateProps = {\n  header: React.ReactNode;\n  footer: FooterProps;\n  children: React.ReactNode;\n  cookieConsent?: React.ReactNode;\n};\n\nexport const LayoutTemplate: React.FC<LayoutTemplateProps> = ({ header, footer, children, cookieConsent }) => (\n  <Flex flexDirection=\"column\" minHeight=\"screen\">\n    {header}\n    <Box as=\"main\" flex=\"1\">\n      {children}\n    </Box>\n    <Footer {...footer} />\n    {cookieConsent}\n  </Flex>\n);\n"],"names":["Footer","introBlock","elevenLabsSiteLinkLabel","elevenLabsSiteLinkProps","contact","socialLinks","languageLinks","jsxs","Box","Flex","jsx","Logo","Text","Button","Heading","currentContact","contactIndex","As2","iconName","linkProps","socialLinkIndex","Icon","label","isActive","index","React","Link","Header","homeLink","autocomplete","autocompleteIsDisplayed","onToggleSearch","isNotTablet","useMediaQuery","AutocompleteField","renderScripts","scripts","script","HtmlTemplate","lang","title","content","metas","links","styles","meta","getPathFile","link","text","props","LayoutTemplate","header","footer","children","cookieConsent"],"mappings":"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"}