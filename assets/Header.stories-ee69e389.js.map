{"version":3,"file":"Header.stories-ee69e389.js","sources":["../../src/templates/LayoutTemplate/Header/Header.tsx"],"sourcesContent":["import './Header.scss';\n\nimport { Box, Button, Flex, Link, Logo } from '@eleven-labs/design-system';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { AutocompleteField, AutocompleteFieldProps, BurgerButton, CloseButton } from '@/components';\n\nexport interface HeaderProps {\n  homeLink: React.ComponentPropsWithoutRef<'a'>;\n  categories: ({\n    label: React.ReactNode;\n    isActive?: boolean;\n  } & React.ComponentPropsWithoutRef<'a'>)[];\n  hasTutorial: boolean;\n  tutorialLink: { label: React.ReactNode } & React.ComponentPropsWithoutRef<'a'>;\n  contactLink: { label: React.ReactNode } & React.ComponentPropsWithoutRef<'a'>;\n  autocomplete: AutocompleteFieldProps;\n  onToggleMenu: () => void;\n  menuIsOpen?: boolean;\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  homeLink,\n  categories,\n  hasTutorial,\n  tutorialLink: { label: tutorialLinkLabel, ...tutorialLink },\n  contactLink: { label: contactLinkLabel, ...contactLink },\n  autocomplete,\n  onToggleMenu,\n  menuIsOpen = false,\n}) => {\n  return (\n    <Flex as=\"header\" justifyContent=\"between\" alignItems=\"center\" bg=\"white\" p=\"m\" className=\"header\">\n      <Box as=\"a\" {...homeLink} color=\"navy\">\n        <Logo name=\"blog\" className=\"header__logo\" />\n      </Box>\n      <Box className={classNames('header__menu', { 'header__menu--is-open': menuIsOpen })}>\n        {categories.map(({ label, isActive, ...categoryLink }, index) => (\n          <Link as=\"a\" key={index} {...categoryLink} data-internal-link=\"category\" className=\"header__menu-item\">\n            {label}\n          </Link>\n        ))}\n        {hasTutorial && (\n          <>\n            <Box className=\"header__separator\" />\n            <Link as=\"a\" {...tutorialLink} data-internal-link=\"category\" className=\"header__menu-item\">\n              {tutorialLinkLabel}\n            </Link>\n          </>\n        )}\n        <Flex justifyContent=\"center\" alignItems=\"center\" mt=\"m\" hiddenAbove=\"md\">\n          <Button as=\"a\" {...contactLink}>\n            {contactLinkLabel}\n          </Button>\n        </Flex>\n      </Box>\n      <AutocompleteField hiddenBelow=\"md\" {...autocomplete} />\n      {menuIsOpen ? (\n        <CloseButton hiddenAbove=\"md\" onClick={onToggleMenu} />\n      ) : (\n        <BurgerButton hiddenAbove=\"md\" onClick={onToggleMenu} />\n      )}\n    </Flex>\n  );\n};\n"],"names":["Header","homeLink","categories","hasTutorial","tutorialLinkLabel","tutorialLink","contactLinkLabel","contactLink","autocomplete","onToggleMenu","menuIsOpen","jsxs","Flex","jsx","Box","Logo","classNames","label","isActive","categoryLink","index","Link","Fragment","Button","AutocompleteField","CloseButton","BurgerButton"],"mappings":"sqBAsBO,MAAAA,EAAA,CAAA,CAAuC,SAAAC,EAC5C,WAAAC,EACA,YAAAC,EACA,aAAA,CAAA,MAAAC,EAAA,GAAAC,CAAA,EAC0D,YAAA,CAAA,MAAAC,EAAA,GAAAC,CAAA,EACH,aAAAC,EACvD,aAAAC,EACA,WAAAC,EAAA,EAEF,IACEC,EAAAA,KAAAC,EAAA,CAAA,GAAA,SAAA,eAAA,UAAA,WAAA,SAAA,GAAA,QAAA,EAAA,IAAA,UAAA,SAAA,SAAA,CAEIC,EAAA,IAAAC,EAAA,CAAA,GAAA,IAAA,GAAAb,EAAA,MAAA,OAAA,SAAAY,EAAA,IAAAE,EAAA,CAAA,KAAA,OAAA,UAAA,cAAA,CAAA,EAAA,EAEAJ,OAAAG,EAAA,CAAA,UAAAE,EAAA,eAAA,CAAA,wBAAAN,EAAA,EAAA,SAAA,CAEGR,EAAA,IAAA,CAAA,CAAA,MAAAe,EAAA,SAAAC,EAAA,GAAAC,GAAAC,IAAAP,EAAA,IAAAQ,EAAA,CAAA,GAAA,IAAA,GAAAF,EAAA,qBAAA,WAAA,UAAA,oBAAA,SAAAF,GAAAG,CAAA,CAAA,EAIAjB,GAAAQ,EAAA,KAAAW,WAAA,CAAA,SAAA,CAGGT,EAAAA,IAAAC,EAAA,CAAA,UAAA,mBAAA,CAAA,EAAmCD,EAAAA,IAAAQ,EAAA,CAAA,GAAA,IAAA,GAAAhB,EAAA,qBAAA,WAAA,UAAA,oBAAA,SAAAD,CAAA,CAAA,CAGnC,EAAA,EACFS,MAAAD,EAAA,CAAA,eAAA,SAAA,WAAA,SAAA,GAAA,IAAA,YAAA,KAAA,SAAAC,EAAA,IAAAU,EAAA,CAAA,GAAA,IAAA,GAAAhB,EAAA,SAAAD,CAAA,CAAA,EAAA,CAMF,EAAA,EACFO,EAAA,IAAAW,EAAA,CAAA,YAAA,KAAA,GAAAhB,CAAA,CAAA,EACsDE,EAAAG,EAAA,IAAAY,EAAA,CAAA,YAAA,KAAA,QAAAhB,CAAA,CAAA,EAAAI,EAAA,IAAAa,EAAA,CAAA,YAAA,KAAA,QAAAjB,EAAA,CAIE,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}